syntax = "proto3";

package Blocksettle.Communication.Proxy;

message Request
{
    message StartLogin
    {
        string email = 1;
    }

    message CancelLogin
    {
    }

    message GetLoginResult
    {
    }

    message Logout
    {
    }

    message Celer
    {
        int32 message_type = 1;
        bytes data = 2;
    }

    int64 request_id = 1;

    oneof data
    {
        StartLogin start_login = 10;
        CancelLogin cancel_login = 11;
        GetLoginResult get_login_result = 12;
        Logout logout = 13;
        Celer celer = 14;
    }
}

message Response
{
    message StartLogin
    {
        // AutheIDClient::ErrorType as int, 0 if succeess
        int32 error_code = 1;
    }

    message CancelLogin
    {
    }

    message GetLoginResult
    {
        // AutheIDClient::ErrorType as int, 0 if succeess
        int32 error_code = 1;
    }

    message Logout
    {
    }

    message Celer
    {
        int32 message_type = 1;
        bytes data = 2;
    }

    int64 request_id = 1;

    oneof data
    {
        StartLogin start_login = 10;
        CancelLogin cancel_login = 11;
        GetLoginResult get_login_result = 12;
        Logout logout = 13;
        Celer celer = 14;
    }
}
