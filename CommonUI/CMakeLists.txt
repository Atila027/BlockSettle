CMAKE_MINIMUM_REQUIRED( VERSION 3.3 )

PROJECT( ${COMMON_UI_LIB_NAME} )

include (GenerateExportHeader)

set(COMMON_UI_EXPORT_NAME ${COMMON_UI_LIB_NAME}_EXPORT)
set(COMMON_UI_STATIC_DEFINE ${COMMON_UI_LIB_NAME}_BUILT_AS_STATIC)
set(COMMON_UI_EXPORT_FILE_NAME ${COMMON_UI_LIB_NAME}_export.h)

FILE(GLOB SOURCES *.cpp)
FILE(GLOB HEADERS *.h)
FILE(GLOB UI_FILES *.ui )
FILE(GLOB RESOURCE_FILES *.qrc)

LIST(APPEND ${COMMON_UI_LIB_NAME}
    ${COMMON_UI_EXPORT_FILE_NAME}
)

INCLUDE_DIRECTORIES( ${COMMON_LIB_INCLUDE_DIR} )

qt5_add_resources( GENERATED_RESOURCES ${RESOURCE_FILES})
qt5_wrap_ui( GENERATED_UI ${UI_FILES} )

INCLUDE_DIRECTORIES( ${Qt5Gui_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${Qt5Widgets_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${Qt5Core_INCLUDE_DIRS})
INCLUDE_DIRECTORIES( ${Qt5Network_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${Qt5PrintSupport_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${Qt5DBus_INCLUDE_DIRS} )

IF(BSTERMINAL_SHARED_LIBS)
    ADD_LIBRARY( ${COMMON_UI_LIB_NAME} SHARED
       ${SOURCES}
       ${HEADERS}
       ${GENERATED_RESOURCES}
       ${GENERATED_UI})
ELSE()
    ADD_LIBRARY( ${COMMON_UI_LIB_NAME}
       ${SOURCES}
       ${HEADERS}
       ${GENERATED_RESOURCES}
       ${GENERATED_UI})
ENDIF()

GENERATE_EXPORT_HEADER( ${COMMON_UI_LIB_NAME}
             BASE_NAME ${COMMON_UI_LIB_NAME}
             EXPORT_MACRO_NAME ${COMMON_UI_EXPORT_NAME}
             EXPORT_FILE_NAME ${COMMON_UI_EXPORT_FILE_NAME}
             STATIC_DEFINE ${COMMON_UI_STATIC_DEFINE}
)

target_include_directories(
    ${COMMON_UI_LIB_NAME} PUBLIC
    "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}>"
    "$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>"
)

TARGET_LINK_LIBRARIES(${COMMON_UI_LIB_NAME}
   ${OS_SPECIFIC_LIBS}
   Qt5::Core
   Qt5::Widgets
   Qt5::Gui
   Qt5::Network
   Qt5::PrintSupport
   )
