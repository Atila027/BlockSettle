CMAKE_MINIMUM_REQUIRED( VERSION 3.10 )

SET(UNIT_TESTS unit_tests)
PROJECT( ${UNIT_TESTS} )

FILE(GLOB SOURCES *.cpp)
FILE(GLOB HEADERS *.h)

INCLUDE_DIRECTORIES( ${BLOCKSETTLE_UI_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${BS_NETWORK_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${COMMON_LIB_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${CRYPTO_LIB_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${WALLET_LIB_INCLUDE_DIR} )

INCLUDE_DIRECTORIES( ${BS_COMMUNICATION_INCLUDE_DIR} )

INCLUDE_DIRECTORIES( ${PATH_TO_GENERATED} )
INCLUDE_DIRECTORIES( ${NETTY_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${BS_COMMON_ENUMS_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${BS_TERMINAL_API_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${MARKET_ENUMS_INCLUDE_DIR} )

ADD_EXECUTABLE( ${UNIT_TESTS}
   ${SOURCES}
   ${HEADERS}
   )

TARGET_COMPILE_DEFINITIONS( ${UNIT_TESTS} PRIVATE
   SPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_DEBUG
   )

TARGET_LINK_LIBRARIES( ${UNIT_TESTS}
   ${BLOCKSETTLE_UI_LIBRARY_NAME}
   ${BS_NETWORK_LIB_NAME}
   ${CPP_WALLET_LIB_NAME}
   ${CRYPTO_LIB_NAME}
   ${BOTAN_LIB}
   ${OS_SPECIFIC_LIBS}
   ${PROTO_LIB}
   ${ZMQ_LIB}
   ${WS_LIB}
   ${GTEST_LIB}
   Qt5::Core
   Qt5::Gui
   Qt5::Network
   Qt5::Widgets
   ${OPENSSL_LIBS}
   )

TARGET_INCLUDE_DIRECTORIES( ${UNIT_TESTS}
   PRIVATE ${BOTAN_INCLUDE_DIR}
)
